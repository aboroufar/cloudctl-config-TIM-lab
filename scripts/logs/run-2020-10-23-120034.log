+ source /root/kube-cluster/metal3-dev-env//lib/common.sh
++ [[ :/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin: != *\:\/\u\s\r\/\l\o\c\a\l\/\g\o\/\b\i\n\:* ]]
++ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin
+++ go env
/root/kube-cluster/metal3-dev-env//lib/common.sh: line 5: go: command not found
++ eval ''
++ export GOPATH
++++ dirname /root/kube-cluster/metal3-dev-env//lib/common.sh
+++ cd /root/kube-cluster/metal3-dev-env//lib/..
+++ pwd
++ SCRIPTDIR=/root/kube-cluster/metal3-dev-env
+++ whoami
++ USER=root
++ export USER=root
++ USER=root
++ '[' -z '' ']'
++ '[' '!' -f /root/kube-cluster/metal3-dev-env/config_root.sh ']'
++ cp /root/kube-cluster/metal3-dev-env/config_example.sh /root/kube-cluster/metal3-dev-env/config_root.sh
++ echo 'Automatically created config_root.sh with default contents.'
Automatically created config_root.sh with default contents.
++ CONFIG=/root/kube-cluster/metal3-dev-env/config_root.sh
++ source /root/kube-cluster/metal3-dev-env/config_root.sh
++ ADDN_DNS=
++ EXT_IF=
++ PRO_IF=
++ MANAGE_BR_BRIDGE=y
++ MANAGE_PRO_BRIDGE=y
++ MANAGE_INT_BRIDGE=y
++ INT_IF=
++ ROOT_DISK_NAME=/dev/sda
++ NODE_HOSTNAME_FORMAT=node-%d
+++ awk -F= '/^ID=/ { print $2 }' /etc/os-release
+++ tr -d '"'
++ OS=ubuntu
++ [[ ubuntu == ubuntu ]]
++ export CONTAINER_RUNTIME=docker
++ CONTAINER_RUNTIME=docker
++ [[ docker == \p\o\d\m\a\n ]]
++ export POD_NAME=
++ POD_NAME=
++ export POD_NAME_INFRA=
++ POD_NAME_INFRA=
++ export OS
++ export SSH_KEY=/root/.ssh/id_rsa
++ SSH_KEY=/root/.ssh/id_rsa
++ export SSH_PUB_KEY=/root/.ssh/id_rsa.pub
++ SSH_PUB_KEY=/root/.ssh/id_rsa.pub
++ '[' '!' -f /root/.ssh/id_rsa ']'
++ FILESYSTEM=/
++ export CAPM3_VERSION=v1alpha4
++ CAPM3_VERSION=v1alpha4
++ CAPM3_VERSION_LIST='v1alpha3 v1alpha4'
++ grep -wq v1alpha4
++ echo 'v1alpha3 v1alpha4'
++ M3PATH=/src/github.com/metal3-io
++ BMOPATH=/src/github.com/metal3-io/baremetal-operator
++ RUN_LOCAL_IRONIC_SCRIPT=/src/github.com/metal3-io/baremetal-operator/tools/run_local_ironic.sh
++ CAPM3PATH=/src/github.com/metal3-io/cluster-api-provider-metal3
++ CAPM3_BASE_URL=metal3-io/cluster-api-provider-metal3
++ CAPM3REPO=https://github.com/metal3-io/cluster-api-provider-metal3
++ IPAMPATH=/src/github.com/metal3-io/ip-address-manager
++ IPAM_BASE_URL=metal3-io/ip-address-manager
++ IPAMREPO=https://github.com/metal3-io/ip-address-manager
++ IPAMBRANCH=master
++ CAPIPATH=/src/github.com/metal3-io/cluster-api
++ CAPI_BASE_URL=kubernetes-sigs/cluster-api
++ CAPIREPO=https://github.com/kubernetes-sigs/cluster-api
++ '[' v1alpha4 == v1alpha4 ']'
++ CAPM3BRANCH=master
++ export CAPI_VERSION=v1alpha3
++ CAPI_VERSION=v1alpha3
++ BMOREPO=https://github.com/metal3-io/baremetal-operator.git
++ BMOBRANCH=master
++ FORCE_REPO_UPDATE=false
++ BMO_RUN_LOCAL=false
++ CAPM3_RUN_LOCAL=false
++ WORKING_DIR=/opt/metal3-dev-env
++ NODES_FILE=/opt/metal3-dev-env/ironic_nodes.json
++ NODES_PLATFORM=libvirt
++ export NAMESPACE=metal3
++ NAMESPACE=metal3
++ export NUM_NODES=2
++ NUM_NODES=2
++ export NUM_OF_MASTER_REPLICAS=1
++ NUM_OF_MASTER_REPLICAS=1
++ export NUM_OF_WORKER_REPLICAS=1
++ NUM_OF_WORKER_REPLICAS=1
++ export VM_EXTRADISKS=false
++ VM_EXTRADISKS=false
++ export DOCKER_REGISTRY_IMAGE=docker.io/registry:latest
++ DOCKER_REGISTRY_IMAGE=docker.io/registry:latest
++ export VBMC_IMAGE=quay.io/metal3-io/vbmc
++ VBMC_IMAGE=quay.io/metal3-io/vbmc
++ export SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ SUSHY_TOOLS_IMAGE=quay.io/metal3-io/sushy-tools
++ export IRONIC_TLS_SETUP=true
++ IRONIC_TLS_SETUP=true
++ export IRONIC_BASIC_AUTH=true
++ IRONIC_BASIC_AUTH=true
++ export IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ IPA_DOWNLOADER_IMAGE=quay.io/metal3-io/ironic-ipa-downloader
++ export IRONIC_IMAGE=quay.io/metal3-io/ironic
++ IRONIC_IMAGE=quay.io/metal3-io/ironic
++ export IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ IRONIC_CLIENT_IMAGE=quay.io/metal3-io/ironic-client
++ export IRONIC_INSPECTOR_IMAGE=quay.io/metal3-io/ironic-inspector
++ IRONIC_INSPECTOR_IMAGE=quay.io/metal3-io/ironic-inspector
++ export IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ IRONIC_DATA_DIR=/opt/metal3-dev-env/ironic
++ export IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ IRONIC_IMAGE_DIR=/opt/metal3-dev-env/ironic/html/images
++ export IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ IRONIC_KEEPALIVED_IMAGE=quay.io/metal3-io/keepalived
++ export BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ BAREMETAL_OPERATOR_IMAGE=quay.io/metal3-io/baremetal-operator
++ export OPENSTACK_CONFIG=/root/.config/openstack/clouds.yaml
++ OPENSTACK_CONFIG=/root/.config/openstack/clouds.yaml
++ '[' v1alpha4 == v1alpha3 ']'
++ export CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:master
++ CAPM3_IMAGE=quay.io/metal3-io/cluster-api-provider-metal3:master
++ export IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:master
++ IPAM_IMAGE=quay.io/metal3-io/ip-address-manager:master
++ export DEFAULT_HOSTS_MEMORY=4096
++ DEFAULT_HOSTS_MEMORY=4096
++ export CLUSTER_NAME=test1
++ CLUSTER_NAME=test1
++ export CLUSTER_APIENDPOINT_IP=192.168.111.249
++ CLUSTER_APIENDPOINT_IP=192.168.111.249
++ export KUBERNETES_VERSION=v1.18.8
++ KUBERNETES_VERSION=v1.18.8
++ export KUBERNETES_BINARIES_VERSION=v1.18.8
++ KUBERNETES_BINARIES_VERSION=v1.18.8
++ export KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ KUBERNETES_BINARIES_CONFIG_VERSION=v0.2.7
++ '[' docker == docker ']'
++ export EPHEMERAL_CLUSTER=kind
++ EPHEMERAL_CLUSTER=kind
++ export KUSTOMIZE_VERSION=v3.8.5
++ KUSTOMIZE_VERSION=v3.8.5
++ export KIND_VERSION=v0.9.0
++ KIND_VERSION=v0.9.0
++ SKIP_RETRIES=false
++ TEST_TIME_INTERVAL=10
++ TEST_MAX_TIME=240
++ FAILS=0
++ RESULT_STR=
++ export ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ ANSIBLE_DISPLAY_SKIPPED_HOSTS=no
++ export LIBVIRT_DEFAULT_URI=qemu:///system
++ LIBVIRT_DEFAULT_URI=qemu:///system
++ '[' root '!=' root ']'
++ sudo -n uptime
+++ awk -F= '/^VERSION_ID=/ { print $2 }' /etc/os-release
+++ tr -d '"'
+++ cut -f1 -d.
++ OS_VERSION=18
+++ awk -F= '/^VERSION_ID=/ { print $2 }' /etc/os-release
+++ tr -d '"'
++ OS_VERSION_ID=18.04
++ export OS_VERSION
++ export OS_VERSION_ID
++ [[ ubuntu == centos ]]
++ [[ ubuntu == rhel ]]
++ [[ ubuntu == ubuntu ]]
++ [[ 18.04 != \1\8\.\0\4 ]]
++ export USE_FIREWALLD=False
++ USE_FIREWALLD=False
++ [[ ubuntu == \r\h\e\l ]]
++ [[ ubuntu = \c\e\n\t\o\s ]]
+++ df / --output=fstype
+++ tail -n 1
++ FSTYPE=ext4
++ case ${FSTYPE} in
++ '[' '!' -d /opt/metal3-dev-env ']'
++ echo 'Creating Working Dir'
Creating Working Dir
++ sudo mkdir /opt/metal3-dev-env
++ sudo chown root:root /opt/metal3-dev-env
++ chmod 755 /opt/metal3-dev-env
+ source /root/kube-cluster/metal3-dev-env//lib/releases.sh
++ CAPM3RELEASEPATH=https://api.github.com/repos/metal3-io/cluster-api-provider-metal3/releases
++ CAPIRELEASEPATH=https://api.github.com/repos/kubernetes-sigs/cluster-api/releases
++ '[' v1alpha4 == v1alpha4 ']'
+++ get_latest_release https://api.github.com/repos/metal3-io/cluster-api-provider-metal3/releases v0.4.
+++ set +x
